# landing_simbad/cloudbuild.simbad.job.yaml
substitutions:
  _REGION: us-west2
  _AR_HOST: us-west2-docker.pkg.dev
  _AR_REPO: containers
  _IMAGE: simbad-harvester
  _JOB: simbad-harvester-job
  _SERVICE_ACCOUNT: run-landing-simbad-sa@${PROJECT_ID}.iam.gserviceaccount.com
  _BUCKET: TU_BUCKET_DESTINO              # <-- cÃ¡mbialo
  _SB_SECRET: sb_api_key                  # <-- nombre del Secret Manager

steps:
# 1) Build
- name: gcr.io/cloud-builders/docker
  args: [ 'build', '-t', '${_AR_HOST}/${PROJECT_ID}/${_AR_REPO}/${_IMAGE}:$COMMIT_SHA', 'landing_simbad' ]

# 2) Push
- name: gcr.io/cloud-builders/docker
  args: [ 'push', '${_AR_HOST}/${PROJECT_ID}/${_AR_REPO}/${_IMAGE}:$COMMIT_SHA' ]

# 3) Crear/actualizar Job (timeout largo + envs + secreto)
- name: gcr.io/google.com/cloudsdktool/cloud-sdk
  entrypoint: bash
  args:
    - -c
    - |
      gcloud run jobs describe ${_JOB} --region ${_REGION} >/dev/null 2>&1 \
      && ACTION=update || ACTION=create

      gcloud run jobs ${ACTION} ${_JOB} \
        --region ${_REGION} \
        --image ${_AR_HOST}/${PROJECT_ID}/${_AR_REPO}/${_IMAGE}:$COMMIT_SHA \
        --service-account ${_SERVICE_ACCOUNT} \
        --task-timeout=8h \
        --max-retries=3 \
        --set-env-vars=GCS_BUCKET=${_BUCKET} \
        --set-env-vars=PYTHONUNBUFFERED=1 \
        --set-secrets=SB_API_KEY=${_SB_SECRET}:latest

# 4) Ejecutar inmediatamente (opcional)
- name: gcr.io/google.com/cloudsdktool/cloud-sdk
  args: [ 'run', 'jobs', 'execute', '${_JOB}', '--region', '${_REGION}', '--wait' ]

images:
- ${_AR_HOST}/${PROJECT_ID}/${_AR_REPO}/${_IMAGE}:$COMMIT_SHA
